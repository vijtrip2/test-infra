#!/usr/bin/env bash

set -eo pipefail

USAGE="
Usage:
  $(basename "$0")
"

# Important Directory references based on prowjob configuration.
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
SCRIPTS_DIR=$DIR
CD_DIR=$DIR/..
TEST_INFRA_DIR=$CD_DIR/..
WORKSPACE_DIR=$TEST_INFRA_DIR/..
CODEGEN_DIR=$WORKSPACE_DIR/code-generator
TARGET_GIT_BRANCH="dummy"

# Check all the dependencies are present in container.
source "$TEST_INFRA_DIR"/scripts/lib/common.sh
check_is_installed git
check_is_installed gh

# Findout the runtime semver from the code-generator repo
pushd "$CODEGEN_DIR" >/dev/null
  ack_runtime_version=$(grep "github.com/aws-controllers-k8s/runtime" go.mod | grep -oE "v[0-9]+\.[0-9]+\.[0-9]+")
  if [[ -z $ack_runtime_version ]]; then
    echo "Unable to determine ACK runtime version from code-generator/go.mod file"
    exit 1
  else
    echo "auto-generate-controller.sh][INFO] ACK runtime version for new controllers will be $ack_runtime_version"
  fi
popd >/dev/null

cd "$WORKSPACE_DIR"
# List all the controller names.
controller_names=$(find . -maxdepth 1 -mindepth 1 -type d | cut -d"/" -f2 | grep -E "controller$")
for controller_name in $controller_names; do
  service_name=$(echo "$controller_name"| sed 's/-controller$//g')
  pushd "$WORKSPACE_DIR/$controller_name" >/dev/null
    print_line_separation
    echo "auto-generate-controller.sh][INFO] Building new controller for $service_name service"
    if [[ ! -f go.mod ]]; then
      echo "auto-generate-controller.sh][ERROR] 'go.mod' missing in '$controller_name'. Skipping ... "
      continue
    fi
    service_runtime_version=$(grep "github.com/aws-controllers-k8s/runtime" go.mod | grep -oE "v[0-9]+\.[0-9]+\.[0-9]+")
    if [[ $service_runtime_version == $ack_runtime_version ]]; then
      echo "auto-generate-controller.sh][INFO] $controller_name already has the latest ACK runtime version $ack_runtime_version. Skipping..."
      continue
    fi
    echo "auto-generate-controller.sh][INFO] ACK runtime version for new controllers will be $ack_runtime_version. Current version is $service_runtime_version"
    # make changes
    touch autogenerated.md
    __date=$(date)
    echo "changes on $__date" > autogenerated.md
    git add .
    __commit_message="[ack-bot] ACK runtime update. $service_runtime_version => $ack_runtime_version"
    echo -n "auto-generate-controller.sh][INFO] Adding commit with message: '$__commit_message' ... "
    if git commit -m "$__commit_message" >/dev/null; then
      echo "ok"
    else
      echo ""
      echo "auto-generate-controller.sh][ERROR] Failed to add commit message for $controller_name repository"
    fi
    echo -n "auto-generate-controller.sh][INFO] Pushing changes to branch '$TARGET_GIT_BRANCH' ... "
    if git push --force https://$GITHUB_TOKEN@github.com/vijtrip2/$controller_name.git main:$TARGET_GIT_BRANCH >/dev/null 2>&1; then
      echo "ok"
    else
      echo ""
      echo "auto-generate-controller.sh][ERROR] Failed to push the latest changes into remote repository."
    fi
  popd >/dev/null
done
print_line_separation

#gh issue list -R aws-controllers-k8s/community

#echo "auto-generate-controller.sh][INFO] finished printing issues using github cli"
